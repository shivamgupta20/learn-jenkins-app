pipeline {
    agent any
    environment{
        NETLIFY_SITE_ID = "70a0b55b-9b1c-419d-8257-d0e0b66e0f5b"
        NETLIFY_AUTH_TOKEN = credentials('netlify-token') 
    }
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    echo 'Build stage'
                    npm --version
                    node --version
                    npm ci
                    npm run build
                '''
            }
        }
        stage("Tests") {
            parallel {
                stage("Unit Tests") {
                    agent {
                        docker {
                            image 'node:18-bullseye'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm run test
                        '''
                    }
                }
                stage("E2E Tests") {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.53.1-noble'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm install serve @playwright/test
                            node_modules/.bin/serve -s build &
                            npx playwright test
                        '''
                    }
                }
            }
        }
        stage("staging deploy") {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm install netlify-cli node-jq --save-dev
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --json >> deploy-output.json
                    
                    echo 'Deployed site_id = ${NETLIFY_SITE_ID} to stage env'

                '''
                script {
                    env.STAGING_URL = sh(script: "node_modules/.bin/node-jq -r '.deploy-url' 'deploy-output.json'", returnStdOut: true)
                }
            }
        }
        stage("Staging E2E") {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.53.1-noble'
                    reuseNode true
                }
            }
            environment {
                CI_ENVIRONMENT_URL = "${env.STAGING_URL}"
            }
            steps {
                sh '''
                    npm install @playwright/test --save-dev
                    npx playwright test
                '''
            }
        }
        stage("production deploy") {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm install netlify-cli node-jq --save-dev
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod --json >> deploy-output.json
                    
                    echo 'Deployed site_id = ${NETLIFY_SITE_ID} to production env'

                '''
                script {
                    env.PRODUCTION_URL = sh(script: "node_modules/.bin/node-jq -r '.deploy-url' 'deploy-output.json'", returnStdOut: true)
                }
            }
        }
        stage("Production E2E") {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.53.1-noble'
                    reuseNode true
                }
            }
            environment {
                CI_ENVIRONMENT_URL = "${env.PRODUCTION_URL}"
            }
            steps {
                sh '''
                    npm install @playwright/test --save-dev
                    npx playwright test
                '''
            }
        }
    }
}
