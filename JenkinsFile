pipeline {
    agent any
    environment{
        NETLIFY_SITE_ID = "70a0b55b-9b1c-419d-8257-d0e0b66e0f5b"
        NETLIFY_AUTH_TOKEN = credentials('netlify-token') 
    }
    stages {
        stage("DockerImage") {
            steps {
                sh '''
                    docker build -t my-custom-image .
                '''
                //this custom image can be used in all the stages but just for reference here it is updated only in production stage
            }
        }
        stage('Build') {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    echo 'Build stage'
                    npm --version
                    node --version
                    npm ci
                    npm run build
                '''
            }
        }
        stage("Tests") {
            parallel {
                stage("Unit Tests") {
                    agent {
                        docker {
                            image 'node:18-bullseye'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm run test
                        '''
                    }
                }
                stage("E2E Tests") {
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.54.1-noble'
                            reuseNode true
                        }
                    }
                    steps {
                        sh '''
                            npm install serve @playwright/test
                            node_modules/.bin/serve -s build &
                            npx playwright test
                        '''
                    }
                }
            }
        }
        stage("staging deploy") {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm install netlify-cli node-jq --save-dev
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --json > deploy-output.json
                    
                    echo 'Deployed site_id = "${NETLIFY_SITE_ID}" to stage env'

                '''
                script {
                    stagingUrl = sh(script: "node_modules/.bin/node-jq -r '.\"deploy_url\" ' deploy-output.json", returnStdout: true).trim()
                    echo "Staging URL: ${stagingUrl}"
                }
            }
        }
        stage("Staging E2E") {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.54.1-noble'
                    reuseNode true
                }
            }

            steps {
                script {
                    env.CI_ENVIRONMENT_URL = stagingUrl
                }
                sh '''
                    echo "${CI_ENVIRONMENT_URL}"
                    npm install @playwright/test --save-dev
                    npx playwright test
                '''
            }
        }
        stage("Approval") {
            steps{
                input 'Deploy to Production?'
            }
        }
        stage("production deploy") {
            agent {
                docker {
                    image 'node:18-bullseye'
                    reuseNode true
                }
            }
            steps {
                sh '''
                    npm install netlify-cli node-jq --save-dev
                    node_modules/.bin/netlify --version
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod --json > deploy-output.json
                    
                    echo 'Deployed site_id = "${NETLIFY_SITE_ID}" to production env'
                '''
                script {
                    prodUrl = sh(script: "node_modules/.bin/node-jq -r '.\"deploy_url\" ' deploy-output.json", returnStdout: true).trim()
                    echo "Staging URL: ${prodUrl}"
                }
            }
        }
        stage("Production E2E") {
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.54.1-noble'
                    reuseNode true
                }
            }
            steps {
                script {
                    env.CI_ENVIRONMENT_URL = prodUrl
                }
                sh '''
                    npm install @playwright/test --save-dev
                    npx playwright test
                '''
            }
        }
    }
}
